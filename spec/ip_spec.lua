describe("ip", function()
  local t, ip, is
  local mn, ip8, ip255
  setup(function()
    t = require "t"
    ip = t.net.ip
    is = t.is
    mn=256
    ip8=8*(mn^3) + 8*(mn^2) + 8*(mn) + 8 --134744072
    ip255=255*(mn^3) + 255*(mn^2) + 255*(mn) + 255
  end)
  it("basic", function()
    local n = (8*256*256*256) + 8*256*256 + 8*256 + 8
    assert.equal(8, n % 256)
    assert.is_not_nil(ip)
  end)
  it("new", function()
    assert.equal(ip(ip8), ip('8.8.8.8'))
    assert.equal(ip('8.8.8.8'), ip('8.8.8.8'))
    assert.equal('8.8.8.8', tostring(ip('8.8.8.8')))
    assert.equal(ip('8.8.8.8'), ip(ip8))
    assert.equal(ip(0), ip('0.0.0.0'))
    assert.equal(ip('0.0.0.0'), ip(0))
    assert.is_nil(ip(-1))
    assert.is_nil(ip(ip255+1))
    assert.is_nil(ip('0.0.0.0.0'))
    assert.is_nil(ip('0.0.0.-1'))
    assert.is_nil(ip('-1.0.0.0'))
    assert.is_nil(ip('0.0.0.256'))
    assert.is_nil(ip('0.0.256.0'))
    assert.is_nil(ip('0.256.0.0'))
    assert.is_nil(ip('256.0.0.0'))
    assert.is_nil(ip('255.255.255.256'))
  end)
  it("tostring", function()
    assert.equal('8.8.8.8', tostring(ip('8.8.8.8')))
    assert.equal('8.8.8.8', tostring(ip(ip8)))
    assert.equal('0.0.0.0', tostring(ip('0.0.0.0')))
    assert.equal('0.0.0.0', tostring(ip(0)))
    assert.equal('255.255.255.255', tostring(ip('255.255.255.255')))
    assert.equal('255.255.255.255', tostring(ip(ip255)))
  end)
  it("tonumber", function()
    assert.equal(ip8, tonumber(ip('8.8.8.8')))
    assert.equal(ip8, tonumber(ip(ip8)))
    assert.equal(0, tonumber(ip('0.0.0.0')))
    assert.equal(0, tonumber(ip(0)))
    assert.equal(ip255, tonumber(ip('255.255.255.255')))
    assert.equal(ip255, tonumber(ip(ip255)))
  end)
  it("eq", function()
    assert.truthy(rawequal(ip('8.8.8.8'), ip('8.8.8.8')))
    assert.truthy(ip('8.8.8.8') == ip('8.8.8.8'))
    assert.truthy(ip(ip8) == ip('8.8.8.8'))
    assert.truthy(ip(0) == ip('0.0.0.0'))
    assert.truthy(ip(ip8) == ip(ip('8.8.8.8')))
  end)
  it("is", function()
    assert.equal(true, is.net.ip(t.net.ip('8.8.8.8')))
    assert.equal(true, is.net.ip(t.net.ip(t.net.ip('8.8.8.8'))))
    assert.truthy(is.net.ip(t.net.ip('8.8.8.8')))
    assert.truthy(is.net.ip(t.net.ip('8.8.8.8')))
    assert.falsy(is.net.ip(t.net.ip('8.8.8.8888')))
    assert.falsy(is.net.ip(function() end))
  end)
end)
